- HTML:
    -> Hyper Text Markup Language
    -> created by Tim Berners-Lee in 1991
    -> first version: HTML 1.0 (1991) , first standard version: HTML 2.0 (1995)  ,  Now, HTML 5 (2014)
    -> Hyper Text: 
        -> defines the link between the web pages
    -> Markup Language: 
        -> define the text document within tag which defines the structure of web pages.
        -> used by the browser to manipulate text, images and other content to display it in required format.
        -> HTML uses "markup" to annotate text
    -> annotate text:
        -> add notes to (a text or diagram) giving explanation or comment

- React:(for front End)
    -> React is a JavaScript library for building user interfaces. 
    -> It is a front-end JavaScript library for building user interfaces and it is maintained by Facebook.
    -> It is maintained by Facebook and a community of individual developers and companies. 
    -> React can be used as a base in the development of single-page or mobile applications, as it is optimal(best or most favourable) for fetching rapidly changing data that needs to be recorded.
    -> Because ReactJS helps to prevent updating of DOM, it means that the apps will be faster and deliver better UX. 
    -> React elements are immutable. Once you create an element, you can’t change its children or attributes.

- ReactDOM:
    -> ReactDOM is a library for web apps that lets you manipulate DOM, just like jquery but in react style.
    -> To be more concise, react is for the components and react-dom is for rendering the components in the DOM. 
    -> 'react-dom' acts as a glue between components and DOM. 
    -> You will be using render() method of the react-dom to render(means, become) components in the DOM.

- JSX:
    -> JavaScript and XML
    -> JSX is an HTML-like syntax that you can use with React to (theoretically) make it easier and more intuitive to create React components.
    -> so that XML/HTML-like text can co-exist with JavaScript/React code. 
    -> Unlike the past, instead of putting JavaScript into HTML, JSX allows us to put HTML into JavaScript.
    -> Without JSX, creating large, nested HTML documents using JS syntax would be a large pain in the rear; JSX simply makes that process easier.
    -> Use: 
        -> You can definitely use React without JSX but JSX makes React a lot more elegant. 
        -> Just like XML, JSX tags have a tag name, attributes, and children.
        -> Instead of artificially separating technologies by putting markup and logic in separate files, React separates concerns with loosely coupled units called “components” that contain both.
    -> Bable: 
        -> Babel is a JavaScript compiler that includes the ability to compile JSX into regular JavaScript / react elements.
        ->Browser can understand only js object
    -> Is JSX react specific?:
        -> It is called JSX, and it is a syntax extension to JavaScript. 
        -> We recommend using it with React to describe what the UI should look like. 
        -> JSX may remind you of a template language, but it comes with the full power of JavaScript. 
        -> JSX produces React “elements”/ jsx elements.



- Embedding Expressions in JSX:
    -> we declare a variable called name and then use it inside JSX by wrapping it in curly braces:  const element = <h1>Hello, {name}</h1>;
    -> Don’t put quotes around curly braces when 'embedding a JavaScript expression' in an 'attribute'. 
    -> You should either use quotes (for string values) or curly braces (for expressions), but not both in the same attribute.
    -> eg: {10}, "jino", {[10,20,30]}, {{name:jino, age:23}}, {index+1}, {2+3}, {functionReference}


- Rendering Multiple Components:
    -> You can build collections of elements and include them in JSX using curly braces {}.


